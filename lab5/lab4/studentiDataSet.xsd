<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="studentiDataSet" targetNamespace="http://tempuri.org/studentiDataSet.xsd" xmlns:mstns="http://tempuri.org/studentiDataSet.xsd" xmlns="http://tempuri.org/studentiDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="studentiConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="studentiConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.lab4.Properties.Settings.GlobalReference.Default.studentiConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="noteTableAdapter" GeneratorDataComponentClassName="noteTableAdapter" Name="note" UserDataComponentName="noteTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="studentiConnectionString (Settings)" DbObjectName="studenti.dbo.note" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[note] WHERE (([id_student] = @Original_id_student) AND ([nume] = @Original_nume) AND ([nota_1] = @Original_nota_1) AND ([nota_2] = @Original_nota_2))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_student" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_student" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_nume" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="nume" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_nota_1" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="nota_1" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_nota_2" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="nota_2" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[note] ([nume], [nota_1], [nota_2]) VALUES (@nume, @nota_1, @nota_2);
SELECT id_student, nume, nota_1, nota_2 FROM note WHERE (id_student = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@nume" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="nume" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@nota_1" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="nota_1" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@nota_2" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="nota_2" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id_student, nume, nota_1, nota_2 FROM dbo.note</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[note] SET [nume] = @nume, [nota_1] = @nota_1, [nota_2] = @nota_2 WHERE (([id_student] = @Original_id_student) AND ([nume] = @Original_nume) AND ([nota_1] = @Original_nota_1) AND ([nota_2] = @Original_nota_2));
SELECT id_student, nume, nota_1, nota_2 FROM note WHERE (id_student = @id_student)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@nume" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="nume" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@nota_1" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="nota_1" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@nota_2" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="nota_2" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_student" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_student" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_nume" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="nume" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_nota_1" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="nota_1" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_nota_2" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="nota_2" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id_student" ColumnName="id_student" DataSourceName="studenti.dbo.note" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_student" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_student" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id_student" DataSetColumn="id_student" />
              <Mapping SourceColumn="nume" DataSetColumn="nume" />
              <Mapping SourceColumn="nota_1" DataSetColumn="nota_1" />
              <Mapping SourceColumn="nota_2" DataSetColumn="nota_2" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="studentiDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="studentiDataSet" msprop:Generator_DataSetName="studentiDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="note" msprop:Generator_RowEvHandlerName="noteRowChangeEventHandler" msprop:Generator_RowDeletedName="noteRowDeleted" msprop:Generator_RowDeletingName="noteRowDeleting" msprop:Generator_RowEvArgName="noteRowChangeEvent" msprop:Generator_TablePropName="note" msprop:Generator_RowChangedName="noteRowChanged" msprop:Generator_RowChangingName="noteRowChanging" msprop:Generator_TableClassName="noteDataTable" msprop:Generator_RowClassName="noteRow" msprop:Generator_TableVarName="tablenote" msprop:Generator_UserTableName="note">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id_student" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="id_student" msprop:Generator_ColumnPropNameInTable="id_studentColumn" msprop:Generator_ColumnVarNameInTable="columnid_student" msprop:Generator_UserColumnName="id_student" type="xs:int" />
              <xs:element name="nume" msprop:Generator_ColumnPropNameInRow="nume" msprop:Generator_ColumnPropNameInTable="numeColumn" msprop:Generator_ColumnVarNameInTable="columnnume" msprop:Generator_UserColumnName="nume">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="nota_1" msprop:Generator_ColumnPropNameInRow="nota_1" msprop:Generator_ColumnPropNameInTable="nota_1Column" msprop:Generator_ColumnVarNameInTable="columnnota_1" msprop:Generator_UserColumnName="nota_1" type="xs:double" />
              <xs:element name="nota_2" msprop:Generator_ColumnPropNameInRow="nota_2" msprop:Generator_ColumnPropNameInTable="nota_2Column" msprop:Generator_ColumnVarNameInTable="columnnota_2" msprop:Generator_UserColumnName="nota_2" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:note" />
      <xs:field xpath="mstns:id_student" />
    </xs:unique>
  </xs:element>
</xs:schema>